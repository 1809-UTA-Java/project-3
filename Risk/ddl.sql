ALTER TABLE CREDIT_CARDS DROP CONSTRAINT CC_CUSTOMER_CONSTRAINT;
ALTER TABLE LOANS DROP CONSTRAINT LOAN_CUSTOMER_CONSTRAINT;
ALTER TABLE PAYMENTS DROP CONSTRAINT PAYMENT_CUSTOMER_CONSTRAINT;

DROP TABLE CUSTOMERS;
DROP TABLE CREDIT_CARDS;
DROP TABLE LOANS;
DROP TABLE PAYMENTS;
DROP SEQUENCE C_Sequence;
DROP SEQUENCE CC_Sequence;
DROP SEQUENCE L_Sequence;
DROP SEQUENCE P_Sequence;

CREATE TABLE CUSTOMERS (
	CUSTOMER_ID NUMBER(*,0) PRIMARY KEY,
	CUST_NAME VARCHAR2(50),
	DATE_OF_BIRTH DATE,
	INCOME NUMBER(20,2)
);

CREATE TABLE CREDIT_CARDS (
	CREDIT_CARD_NUMBER NUMBER(*,0) PRIMARY KEY,
	CUSTOMER_ID NUMBER(*,0) ,
	BALANCE NUMBER(20,2),
	LIMIT NUMBER(20,2),
	CONSTRAINT CC_CUSTOMER_CONSTRAINT
	FOREIGN KEY (CUSTOMER_ID)
	REFERENCES CUSTOMERS (CUSTOMER_ID)
);

CREATE TABLE LOANS (
	LOAN_ID NUMBER(*,0) PRIMARY KEY,
	CUSTOMER_ID NUMBER(*,0),
	BALANCE NUMBER(20,2),
	PRINCIPLE NUMBER(20,2),
	CONSTRAINT LOAN_CUSTOMER_CONSTRAINT
	FOREIGN KEY (CUSTOMER_ID)
	REFERENCES CUSTOMERS (CUSTOMER_ID)
);

--Not a foreign key check which is null and join on it to check lateness
CREATE TABLE PAYMENTS (
	PAYMENT_ID NUMBER(*,0) PRIMARY KEY,
	CUSTOMER_ID NUMBER(*,0),
	CREDIT_CARD NUMBER(*,0) DEFAULT NULL,
	LOAN NUMBER(*,0) DEFAULT NULL,
	LATE BOOLEAN,
	CONSTRAINT PAYMENT_CUSTOMER_CONSTRAINT
	FOREIGN KEY (CUSTOMER_ID)
	REFERENCES CUSTOMER (CUSTOMER_ID)
);

CREATE SEQUENCE C_Sequence START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER CUSTOMER_INSERT
BEFORE INSERT ON CUSTOMERS 
FOR EACH ROW 
BEGIN
	SELECT C_Sequence.NEXTVAL INTO :NEW.CUSTOMER_ID FROM;
END;
/

CREATE SEQUENCE CC_Sequence START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER CREDIT_CARD_INSERT
BEFORE INSERT ON CREDIT_CARD 
FOR EACH ROW 
BEGIN
	SELECT CC_Sequence.NEXTVAL INTO :NEW.CREDIT_CARD_NUMBER FROM;
END;
/

CREATE SEQUENCE L_Sequence START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER LOAN_INSERT
BEFORE INSERT ON LOANS
FOR EACH ROW 
BEGIN
	SELECT L_Sequence.NEXTVAL INTO :NEW.LOAN_ID FROM;
END;
/

CREATE SEQUENCE P_Sequence START WITH 1 INCREMENT BY 1;
CREATE OR REPLACE TRIGGER PAYMENT_INSERT
BEFORE INSERT ON PAYMENTS
FOR EACH ROW 
BEGIN
	SELECT P_Sequence.NEXTVAL INTO :NEW.PAYMENT_ID FROM;
END;
/